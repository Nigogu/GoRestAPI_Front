{"version":3,"sources":["Backend.js","UserModal.js","App.js","reportWebVitals.js","index.js"],"names":["Backend","path","method","headers","body","fetch","this","api_url","concat","JSON","stringify","Title","Typography","Text","UserModal","type","data","Date","toLocaleDateString","centered","width","visible","props","onCancel","closeModal","footer","closable","justify","className","level","userInfo","name","align","xs","md","lg","size","sm","xl","xxl","icon","UserOutlined","strong","copyable","tooltips","email","translate","gender","status","created_at","updated_at","onClick","React","Component","App","pagChange","currentPage","setState","loadingTable","makeUsersQuery","userModalVisible","state","columns","title","style","marginBottom","dataIndex","render","text","record","showModal","key","page","total_users","loadingModal","selectedUserInfo","SendRequest","then","response","a","json","res","users_array","forEach","user","push","id","meta","pagination","total","pre","Array","fill","length","pos","console","error","spinning","bordered","dataSource","loading","defaultPageSize","position","showSizeChanger","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bd3ce727.chunk.js","sourcesContent":["export default class Backend {\n  static api_url = \"https://gorest.co.in/public-api/\";\n\n  static SendRequest(path, method, headers, body) {\n    let answer = fetch(this.api_url.concat(path), {\n      method: method,\n      headers: headers,\n      body: JSON.stringify(body),\n    });\n    return answer;\n  }\n}\n","import React from \"react\";\nimport { Modal, Typography, Row, Col, Avatar, Button } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\n\nconst { Title, Text } = Typography;\n\nexport default class UserModal extends React.Component {\n  translate(type, data) {\n    if (type === \"Gender\") {\n      return data === \"Male\" ? \"Masculino\" : \"Femenino\";\n    } else if (type === \"Status\") {\n      return data === \"Active\" ? \"Activo\" : \"Inactivo\";\n    } else if (type === \"Date\") {\n      let date = new Date(data);\n      return date.toLocaleDateString();\n    }\n  }\n\n  render() {\n    return (\n      <Modal\n        centered\n        width={900}\n        visible={this.props.visible}\n        onCancel={this.props.closeModal}\n        footer={null}\n        closable={false}\n      >\n        <Row justify=\"center\">\n          <Title className=\"App-Title\" level={3}>\n            {this.props.userInfo.name}\n          </Title>\n        </Row>\n        <Row align=\"middle\">\n          <Col xs={10} md={8} lg={7}>\n            <Row justify=\"center\">\n              <Avatar\n                size={{ xs: 80, sm: 90, md: 100, lg: 110, xl: 140, xxl: 150 }}\n                icon={<UserOutlined />}\n              />\n            </Row>\n          </Col>\n          <Col className=\"UserModal-Info\" xs={14} md={16} lg={17}>\n            <Text strong>Email: </Text>\n            <Text\n              copyable={{\n                tooltips: [\n                  \"Copiar e-mail en el portapapeles\",\n                  \"¡E-mail Copiado!\",\n                ],\n              }}\n            >\n              {this.props.userInfo.email}\n            </Text>\n            <br />\n            <Text strong>Género: </Text>\n            <Text>{this.translate(\"Gender\", this.props.userInfo.gender)}</Text>\n            <br />\n            <Text strong>Estado del usuario: </Text>\n            <Text>{this.translate(\"Status\", this.props.userInfo.status)}</Text>\n            <br />\n            <Text strong>Registro: </Text>\n            <Text>\n              {this.translate(\"Date\", this.props.userInfo.created_at)}\n            </Text>\n            <br />\n            <Text strong>Última actualización: </Text>\n            <Text>\n              {this.translate(\"Date\", this.props.userInfo.updated_at)}\n            </Text>\n          </Col>\n        </Row>\n        <Row justify=\"end\">\n          <Col>\n            <Button\n              className=\"UserModal-Button\"\n              type=\"primary\"\n              onClick={this.props.closeModal}\n            >\n              Volver\n            </Button>\n          </Col>\n        </Row>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport Backend from \"./Backend\";\nimport UserModal from \"./UserModal\";\nimport { Row, Col, Table, Typography, Button, Spin } from \"antd\";\n\nimport \"./App.css\";\n\nconst { Title } = Typography;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        {\n          title: (\n            <Title level={4} style={{ marginBottom: 0 }}>\n              Nombre de usuario\n            </Title>\n          ),\n          dataIndex: \"user\",\n          align: \"center\",\n        },\n        {\n          title: (\n            <Title level={4} style={{ marginBottom: 0 }}>\n              Detalles\n            </Title>\n          ),\n          dataIndex: \"details\",\n          align: \"center\",\n          render: (text, record) => (\n            <Button type=\"link\" onClick={() => this.showModal(record.key)}>\n              Ver más información\n            </Button>\n          ),\n        },\n      ],\n      data: [],\n      page: 1,\n      total_users: 0,\n      loadingTable: true,\n      loadingModal: false,\n      userModalVisible: false,\n      selectedUserInfo: {},\n    };\n  }\n\n  componentDidMount() {\n    this.makeUsersQuery(this.state.page);\n  }\n\n  makeUsersQuery(page) {\n    Backend.SendRequest(\"users?page=\".concat(page), \"GET\", {}).then(\n      async (response) => {\n        if (response.status === 200) {\n          let res = await response.json();\n          let users_array = [];\n          res.data.forEach((user) => {\n            users_array.push({\n              key: user.id,\n              user: user.name,\n            });\n          });\n\n          let total_users = res.meta.pagination.total;\n\n          if (page > 1) {\n            let pre = new Array((page - 1) * 20);\n            pre.fill({});\n            users_array = pre.concat(users_array);\n          }\n\n          if (total_users !== users_array.length) {\n            let pos = new Array(total_users - users_array.length);\n            pos.fill({});\n            users_array = users_array.concat(pos);\n          }\n\n          this.setState({\n            data: users_array,\n            total_users: total_users,\n            loadingTable: false,\n          });\n        } else {\n          console.error(\"Error making the request: \" + response.status);\n        }\n      }\n    );\n  }\n\n  pagChange = (currentPage) => {\n    this.setState(\n      {\n        loadingTable: true,\n      },\n      () => this.makeUsersQuery(currentPage)\n    );\n  };\n\n  showModal(id) {\n    this.setState({\n      loadingModal: true,\n    });\n    Backend.SendRequest(\"users/\".concat(id), \"GET\", {}).then(\n      async (response) => {\n        if (response.status === 200) {\n          let res = await response.json();\n          this.setState({\n            selectedUserInfo: res.data,\n            userModalVisible: true,\n            loadingModal: false,\n          });\n        }\n      }\n    );\n  }\n\n  closeModal = () => {\n    this.setState({ userModalVisible: false });\n  };\n\n  render() {\n    return (\n      <Spin spinning={this.state.loadingModal}>\n        <div className=\"App-Div-Main\">\n          <Row justify=\"center\">\n            <Col className=\"App-Col-Title\" xs={22} md={21} lg={20}>\n              <Title className=\"App-Title\">LISTA DE USUARIOS</Title>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col xs={22} md={18} lg={12}>\n              <Table\n                bordered\n                size=\"small\"\n                columns={this.state.columns}\n                dataSource={this.state.data}\n                loading={this.state.loadingTable}\n                pagination={{\n                  defaultPageSize: 20,\n                  position: [\"topRight\"],\n                  size: \"big\",\n                  showSizeChanger: false,\n                  onChange: this.pagChange,\n                }}\n              ></Table>\n            </Col>\n          </Row>\n\n          <UserModal\n            closeModal={this.closeModal}\n            visible={this.state.userModalVisible}\n            userInfo={this.state.selectedUserInfo}\n          ></UserModal>\n        </div>\n      </Spin>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}